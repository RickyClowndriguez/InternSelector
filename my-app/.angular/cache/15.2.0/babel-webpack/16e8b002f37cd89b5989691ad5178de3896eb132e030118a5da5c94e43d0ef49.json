{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/users';\n  }\n  getUsernames() {\n    return this.http.get(this.apiUrl).pipe(map(users => users.map(user => user.username)));\n  }\n  addUser(username, id, team, status) {\n    const user = {\n      username,\n      id,\n      team,\n      status\n    };\n    return this.http.post(this.apiUrl, user);\n  }\n  removeUser(username) {\n    const url = `${this.apiUrl}?username=${username}`;\n    return this.http.delete(url);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;AAMpC,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,6BAA6B;EAEN;EAExCC,YAAY;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAQ,IAAI,CAACC,MAAM,CAAC,CAACC,IAAI,CAC3CP,GAAG,CAACQ,KAAK,IAAIA,KAAK,CAACR,GAAG,CAACS,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAAC,CAAC,CAC/C;EACH;EACAC,OAAO,CAACD,QAAgB,EAAEE,EAAU,EAAEC,IAAY,EAAEC,MAAc;IAChE,MAAML,IAAI,GAAG;MAAEC,QAAQ;MAAEE,EAAE;MAAEC,IAAI;MAAEC;IAAM,CAAE;IAC3C,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAM,IAAI,CAACT,MAAM,EAAEG,IAAI,CAAC;EAC/C;EAEAO,UAAU,CAACN,QAAgB;IACzB,MAAMO,GAAG,GAAG,GAAG,IAAI,CAACX,MAAM,aAAaI,QAAQ,EAAE;IACjD,OAAO,IAAI,CAACP,IAAI,CAACe,MAAM,CAAMD,GAAG,CAAC;EACnC;;AAlBWhB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAFV;AAAM","names":["map","UserService","constructor","http","getUsernames","get","apiUrl","pipe","users","user","username","addUser","id","team","status","post","removeUser","url","delete","factory","providedIn"],"sourceRoot":"","sources":["/home/knacko/lolchoice/my-app/src/app/user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private apiUrl = 'http://localhost:3000/users';\n\n  constructor(private http: HttpClient) { }\n\n  getUsernames(): Observable<string[]> {\n    return this.http.get<any[]>(this.apiUrl).pipe(\n      map(users => users.map(user => user.username))\n    );\n  }\n  addUser(username: string, id: number, team: string, status: string): Observable<any> {\n    const user = { username, id, team, status };\n    return this.http.post<any>(this.apiUrl, user);\n  }\n\n  removeUser(username: string): Observable<any> {\n    const url = `${this.apiUrl}?username=${username}`;\n    return this.http.delete<any>(url);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}